//Naive approach
//         ListNode *temp=head;
//         int c=0;
//         while(temp!=NULL){
//             c++;
//             temp=temp->next;
//         }
//        temp=head;
//         if(c==n)return temp->next;
//          int k=c-n;
//         c=1;
//         while(c!=k){
//             c++;
//             temp=temp->next;
//         }
        
//        temp->next=temp->next->next;
//        return head; 


  //optimized approach
        ListNode *start=new ListNode();
        start->next=head;
        ListNode *fast=start;
        ListNode *slow=start;
        int c=0;
        while(c!=n){
            fast=fast->next;
            c++;}
        while(fast->next!=NULL){
            slow=slow->next;
            fast=fast->next;
        }
        slow->next=slow->next->next;
        return start->next;
